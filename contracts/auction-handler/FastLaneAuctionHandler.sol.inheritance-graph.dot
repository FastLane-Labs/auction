digraph "" {
ERC20[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ERC20</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    approve(address,uint256)</TD></TR><TR><TD align="left">    transfer(address,uint256)</TD></TR><TR><TD align="left">    transferFrom(address,address,uint256)</TD></TR><TR><TD align="left">    permit(address,address,uint256,uint256,uint8,bytes32,bytes32)</TD></TR><TR><TD align="left">    DOMAIN_SEPARATOR()</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    computeDomainSeparator()</TD></TR><TR><TD align="left">    _mint(address,uint256)</TD></TR><TR><TD align="left">    _burn(address,uint256)</TD></TR><TR><TD align="left"><I>Public Variables:</I></TD></TR><TR><TD align="left">    name</TD></TR><TR><TD align="left">    symbol</TD></TR><TR><TD align="left">    decimals</TD></TR><TR><TD align="left">    totalSupply</TD></TR><TR><TD align="left">    balanceOf</TD></TR><TR><TD align="left">    allowance</TD></TR><TR><TD align="left">    nonces</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    INITIAL_CHAIN_ID</TD></TR><TR><TD align="left">    INITIAL_DOMAIN_SEPARATOR</TD></TR></TABLE> >];

ReentrancyGuard[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ReentrancyGuard</B></TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    nonReentrant()</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    locked</TD></TR></TABLE> >];

SafeTransferLib[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>SafeTransferLib</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    safeTransferETH(address,uint256)</TD></TR><TR><TD align="left">    safeTransferFrom(ERC20,address,address,uint256)</TD></TR><TR><TD align="left">    safeTransfer(ERC20,address,uint256)</TD></TR><TR><TD align="left">    safeApprove(ERC20,address,uint256)</TD></TR></TABLE> >];

FastLaneAuctionHandlerEvents[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>FastLaneAuctionHandlerEvents</B></TD></TR></TABLE> >];

ISearcherContract[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ISearcherContract</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    fastLaneCall(address,uint256,bytes)</TD></TR></TABLE> >];

FastLaneAuctionHandler -> FastLaneAuctionHandlerEvents [ label="1" ];
FastLaneAuctionHandler -> ReentrancyGuard [ label="2" ];
FastLaneAuctionHandler[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>FastLaneAuctionHandler</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    submitFlashBid(uint256,bytes32,address,bytes)</TD></TR><TR><TD align="left">    payValidatorFee(address)</TD></TR><TR><TD align="left">    simulateFlashBid(uint256,bytes32,address,bytes)</TD></TR><TR><TD align="left">    receive()</TD></TR><TR><TD align="left">    fallback()</TD></TR><TR><TD align="left">    syncStuckNativeToken()</TD></TR><TR><TD align="left">    withdrawStuckERC20(address)</TD></TR><TR><TD align="left">    collectFees()</TD></TR><TR><TD align="left">    updateValidatorPayee(address)</TD></TR><TR><TD align="left">    isPayeeTimeLocked(address)</TD></TR><TR><TD align="left">    isValidPayee(address,address)</TD></TR><TR><TD align="left">    getValidatorBalance(address)</TD></TR><TR><TD align="left">    getValidatorPayee(address)</TD></TR><TR><TD align="left">    getValidatorRecipient(address)</TD></TR><TR><TD align="left">    humanizeError(bytes)</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _payValidatorFee(address)</TD></TR><TR><TD align="left">    _handleBalances(uint256,uint256)</TD></TR><TR><TD align="left">    validatorPayee(address)</TD></TR><TR><TD align="left">    getValidator()</TD></TR><TR><TD align="left">    slice(bytes,uint256,uint256)</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    onlyActiveValidators()</TD></TR><TR><TD align="left">    validPayee()</TD></TR><TR><TD align="left">    onlyEOA()</TD></TR><TR><TD align="left">    checkBid(bytes32,uint256)</TD></TR><TR><TD align="left"><I>Public Variables:</I></TD></TR><TR><TD align="left">    validatorsBalanceMap</TD></TR><TR><TD align="left">    fulfilledAuctionsMap</TD></TR><TR><TD align="left">    validatorsTotal</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    BLOCK_TIMELOCK</TD></TR><TR><TD align="left">    validatorsDataMap</TD></TR><TR><TD align="left">    payeeMap</TD></TR></TABLE> >];

}